# Spring Security Reference Project Configuration
server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: spring-security-reference
  
  # H2 Database Configuration (for JDBC auth)
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: password
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  
  # LDAP Configuration (embedded server for demo)
  ldap:
    embedded:
      port: 8389
      ldif: classpath:test-server.ldif
      base-dn: dc=springframework,dc=org
    
  # OAuth2 Client Configuration (replace with your actual client credentials)
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: your-google-client-id
            client-secret: your-google-client-secret
            scope:
              - email
              - profile
          github:
            client-id: your-github-client-id  
            client-secret: your-github-client-secret
            scope:
              - user:email
              - read:user

# JWT Configuration (for reference - actual values in JwtTokenUtil)
jwt:
  secret: MySuperSecretKey
  expiration: 86400000 # 24 hours in milliseconds

# Logging configuration for security debugging
logging:
  level:
    com.example: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.ldap: DEBUG
    org.springframework.security.oauth2: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Actuator configuration for health checks and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

---
# Development Profile - All authentication methods enabled
spring:
  config:
    activate:
      on-profile: dev
  
logging:
  level:
    com.example: TRACE
    
server:
  port: 8081

---
# JDBC-only Profile
spring:
  config:
    activate:
      on-profile: jdbc-only
      
logging:
  level:
    com.example.commonauthjdbc: DEBUG
    org.springframework.security: DEBUG

---
# LDAP-only Profile  
spring:
  config:
    activate:
      on-profile: ldap-only
      
logging:
  level:
    com.example.commonauthldap: DEBUG
    org.springframework.ldap: DEBUG

---
# OAuth2-only Profile
spring:
  config:
    activate:
      on-profile: oauth2-only
      
logging:
  level:
    com.example.commonauthoauth2: DEBUG
    org.springframework.security.oauth2: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
logging:
  level:
    com.example: WARN
    org.springframework.security: WARN
    org.springframework.web: WARN
    
server:
  port: 8080